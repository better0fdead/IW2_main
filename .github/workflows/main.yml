name: CI

on:
  push:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: install references
        run: sudo apt-get install libgtest-dev -y && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && cd lib && sudo cp *.a /usr/lib && sudo apt install build-essential && sudo apt install git && sudo apt-get install -y cppcheck && sudo apt-get install valgrind && sudo apt-get install -y lcov && sudo apt-get install -y gcovr && sudo apt install python3-pip -y && sudo pip install cpplint

      - name: build
        run: cmake . && make 
        
      - name: static analysis
        run: cpplint --filter="-legal/copyright,-build/include_subdir,-readability/casting,-runtime/arrays" libs/find_words/src/* libs/array_search/include/* libs/array_search_forked/src/* libs/array_search_forked/include/* && cppcheck libs/array_search/src/* libs/array_search/include/* libs/array_search_forked/src/* libs/array_search_forked/include/*
        
      - name: tests_under_valgrind
        run: valgrind --leak-check=full --track-origins=yes ./main && valgrind --leak-check=full --track-origins=yes --child-silent-after-fork=yes  ./tests_forked

      - name: code coverage
        run: lcov -t "HW-2" -o coverage.txt -c -d . && cp coverage.txt ../

      - name: upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests

      
